/******************************************************************************/

#include "stdafx.h"
#include "SSceneObject.h"

#include "SGameObjectFactory.h"

#include "SThirdPartCharacter.h"
#include "SMonster.h"
#include "SCamp.h"
#include "SBuilding.h"
#include "DropItemManager.h"
/******************************************************************************/

namespace MG
{
    //-----------------------------------------------------------------------------
	SSceneObject::SSceneObject()
	{

	}

    //-----------------------------------------------------------------------------
    SSceneObject::~SSceneObject()
    {

    }

	//-----------------------------------------------------------------------------
	Bool SSceneObject::initialize()
	{
		mSceneGridManager.initialize(this);
		return true;
	}

	//-----------------------------------------------------------------------------
	Bool SSceneObject::unInitialize()
	{
		mSceneGridManager.unInitialize();
		return true;
	}

	//-----------------------------------------------------------------------------
	void SSceneObject::clear()
	{

	}

    //-----------------------------------------------------------------------------------
    // Base Data
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    Bool SSceneObject::isOpen() const
    {
		return true;
    }

    //-----------------------------------------------------------------------------
    void SSceneObject::setOpen(Bool open)
    {

    }

    //-----------------------------------------------------------------------------------
    // File
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    SceneFileObject* SSceneObject::getSceneFileObject()
    {
		return 0;
    }

    //-----------------------------------------------------------------------------
    InstanceListCsvInfo* SSceneObject::getInstanceListCsvInfo()
    {
		return 0;
    }

    //-----------------------------------------------------------------------------
    InstanceType SSceneObject::getInstanceType()
    {
		DYNAMIC_ASSERT(0);
		return InstanceType_Null;
    }

 
    //-----------------------------------------------------------------------------------
    // Debug
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    void SSceneObject::print()
    {

    }

    //-----------------------------------------------------------------------------
    Int SSceneObject::getPrintPlayerStrList(std::string& outStrPlayerIds)
    {
		DYNAMIC_ASSERT(0);
		return 0;
    }

    //-----------------------------------------------------------------------------
    Int SSceneObject::getPrintPlayerCharacterStrList(std::string& strPlayerCharacterIds)
    {
		DYNAMIC_ASSERT(0);
		return 0;
    }

    //-----------------------------------------------------------------------------
    void SSceneObject::createCampByPlayerForTest(SPlayerPtr& playerCreator, Vec3& pos)
    {

    }

    //-----------------------------------------------------------------------------------
    // Region
    //-----------------------------------------------------------------------------------


    //-----------------------------------------------------------------------------
    RegionObjectData* SSceneObject::getData()
    {
        return mRegionData;
    }

    //-----------------------------------------------------------------------------------
    // Player
    //-----------------------------------------------------------------------------------



    //-----------------------------------------------------------------------------
    void SSceneObject::onPlayerEnter(SPlayerPtr& playerPtr)
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::onPlayerLeave(SPlayerPtr& playerPtr)
    {

    }



    //-----------------------------------------------------------------------------------
    // PlayerCharacter
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    void SSceneObject::onPlayerCharacterEnter(SPlayerCharacterPtr& playerCharPtr)
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::onPlayerCharacterLeave(SPlayerCharacterPtr& playerCharPtr)
    {

    }


    //-----------------------------------------------------------------------------------
    // ThirthPartCharacter
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    void SSceneObject::onThirthPartCharacterEnter(SThirdPartCharacterPtr& thirdPartPlayerCharPtr)
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::onThirthPartCharacterLeave(SThirdPartCharacterPtr& thirdPartPlayerCharPtr)
    {

    }


    //-----------------------------------------------------------------------------------
    // Monster
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------


    //-----------------------------------------------------------------------------------
    // Camp
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    void SSceneObject::changeCampControl(const CampIdType campId, const AccountIdType targetAccountId)
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::changeCampOwner(const AccountIdType targetAccountId)
    {

    }

    //-----------------------------------------------------------------------------------
    // Troop
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    void SSceneObject::addTroopToContorlObjFromCamp(SPlayer* controllerPlayer, TroopGroupIdType troopGroupId, Int troopNum, NetVec2Data* troopPos)
    {

    }

    //-----------------------------------------------------------------------------
    Int SSceneObject::getAllTroopNumInCampByForce(const FORCE force)
    {
		return 0;
    }

    //-----------------------------------------------------------------------------
    void SSceneObject::onTroopEnter(SCharacter* troop, SPlayerPtr& controllerPlayer)
    {

    }

    //-----------------------------------------------------------------------------------
    // BattleBuilding
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    void SSceneObject::createBuildingByXml(CharAppearType appearType)
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::createBuildingAlwaysExistByXml()
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::changeBuildingBelongPlayer(SPlayer* belongPlayer)
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::calcChangeBuildingBelongPlayer()
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::setBuildingListBelongPlayer(const AccountIdType accountId)
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::onBattleBuildingEnter(SCharacter* building)
    {

    }

    //-----------------------------------------------------------------------------
    void SSceneObject::onBattleBuildingLeave(SCharacter* building)
    {

    }

    //-----------------------------------------------------------------------------------
    // Building
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
        
    
    
    
    
    
    
        
    
    
    //-----------------------------------------------------------------------------------
    // Item
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    DropItemManager& SSceneObject::getDropItemManager()
    {
		DYNAMIC_ASSERT(0);
		DropItemManager item;
		return item;
    }

    //-----------------------------------------------------------------------------------
    // SceneGrid
    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------
    SSceneGridManager& SSceneObject::getSceneGridManager()
    {
		return mSceneGridManager;
    }



}	//namespace MG