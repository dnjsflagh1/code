//***********************************************************************************************************
#ifndef _THREADTASK_H_
#define _THREADTASK_H_
//***********************************************************************************************************

//***********************************************************************************************************
namespace MG
{
    //***********************************************************************************************************
    // 线程任务类型
    //***********************************************************************************************************
    enum ThreadTaskType
    {
        TTT_NORMAL_CLIENT = 0,
        TTT_NORMAL_SERVER,
    };

	//***********************************************************************************************************
	// 客户端日常消息处理任务
	//***********************************************************************************************************
	class ClientNormalTask : public ModeTask
	{	
	public:
		ClientNormalTask(NetEventRecv* netEvent,I32 clientNetId, U32 key = 0);
		~ClientNormalTask();
		virtual	void	process();
		virtual	void	free();
		NetEventRecv	*mNetEvent;
		I32				mClientNetId;
	};
	//***********************************************************************************************************
	// 服务器日常消息处理任务
	//***********************************************************************************************************
	class ServerNormalTask : public ModeTask
	{	
	public:
		ServerNormalTask(NetEventRecv* netEvent,I32 serverNetId, U32 key = 0);
		~ServerNormalTask();
		virtual	void	process();
		virtual	void	free();
		NetEventRecv	*mNetEvent;
		I32				mServerNetId;
	};

}
//***********************************************************************************************************
#endif
//***********************************************************************************************************